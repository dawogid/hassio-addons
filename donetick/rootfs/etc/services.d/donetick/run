#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start the donetick service with environment setup and process management
# ==============================================================================

# Set environment variables
# export VITE_APP_API_URL=http://host.docker.internal:2021

# Read configuration and export environment variables
export DT_TELEGRAM_TOKEN=$(bashio::config 'telegram_token')
export DT_PUSHOVER_TOKEN=$(bashio::config 'pushover_token')
DISABLE_SIGNUP_VAL=$(bashio::config 'disable_signup')
IS_USER_CREATION_DISABLED_VAL=$(bashio::config 'is_user_creation_disabled')
# Determine final flag (either option enabling disable state)
FINAL_DISABLE_VAL=${DISABLE_SIGNUP_VAL}
if [ "${IS_USER_CREATION_DISABLED_VAL}" = "true" ]; then
    FINAL_DISABLE_VAL=true
fi
# Export under multiple env var names for compatibility
export DT_DISABLE_SIGNUP=${FINAL_DISABLE_VAL}
export DONETICK_DISABLE_SIGNUP=${FINAL_DISABLE_VAL}
export DT_IS_USER_CREATION_DISABLED=${FINAL_DISABLE_VAL}


export DT_OAUTH2_CLIENT_ID=$(bashio::config 'oauth2_client_id')
export DT_OAUTH2_CLIENT_SECRET=$(bashio::config 'oauth2_client_secret')
export DT_OAUTH2_REDIRECT_URI=$(bashio::config 'oauth2_redirect_uri')
export DT_OAUTH2_AUTH_URL=$(bashio::config 'oauth2_auth_url')
export DT_OAUTH2_TOKEN_URL=$(bashio::config 'oauth2_token_url')
export DT_OAUTH2_USER_INFO_URL=$(bashio::config 'oauth2_user_info_url')
export DT_OAUTH2_NAME=$(bashio::config 'oauth2_name')
export DT_JWT_SECRET=$(bashio::config 'jwt_secret')

# Database (Postgres / Supabase) configuration
if bashio::config.has_value 'db_type'; then export DT_DATABASE_TYPE=$(bashio::config 'db_type'); fi
if bashio::config.has_value 'db_host'; then export DT_DATABASE_HOST=$(bashio::config 'db_host'); fi
if bashio::config.has_value 'db_port'; then export DT_DATABASE_PORT=$(bashio::config 'db_port'); fi
if bashio::config.has_value 'db_user'; then export DT_DATABASE_USER=$(bashio::config 'db_user'); fi
if bashio::config.has_value 'db_password'; then export DT_DATABASE_PASSWORD=$(bashio::config 'db_password'); fi
if bashio::config.has_value 'db_name'; then export DT_DATABASE_NAME=$(bashio::config 'db_name'); fi
if bashio::config.has_value 'db_sslmode'; then export DT_DATABASE_SSLMODE=$(bashio::config 'db_sslmode'); fi
export DT_DATABASE_MIGRATION=true
cd /app
# Start donetick backend and save PID
./donetick-core &
PID1=$!

# Start nginx in the foreground as the second process
nginx -g 'daemon off;' &
PID2=$!

cleanup() {
    echo "Terminating processes..."
    kill $PID2
}

# Trap SIGINT & SIGTERM to clean up before exiting
trap cleanup SIGINT SIGTERM

# Wait for both processes to exit
wait $PID2

echo "Both processes have completed."